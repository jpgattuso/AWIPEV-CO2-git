"0","d_all <- d_hour #d_all will be the merger"
"0","d_all<- d_all%>%"
"0","  dplyr::mutate(month = month(month(datetime)))"
"0","# at"
"0","closest <- which.closest(discrete$datetime, d_all$datetime) # closest date and time"
"0","discrete$closest_datetime <- d_all$datetime[closest]"
"0","# if the closest value is more than 30 min away, then we do not take it"
"0","discrete$closest_datetime[abs(discrete$datetime - d_all$datetime[closest]) > 30*60] <- NA"
"0","# remove the drop_na() because of seafet/durafet line with na"
"0","discrete2merge <- discrete %>%"
"0","  #drop_na() %>%"
"0","  dplyr::select(closest_datetime, at, qflag_at) %>%"
"0","  rename(datetime=closest_datetime)"
"0","d_all <- full_join(d_all, discrete2merge, by=""datetime"")"
"0","# ct"
"0","# closest <- which.closest(discrete$datetime, d$datetime) # closest date and time"
"0","# discrete$closest_datetime <- d$datetime[closest]"
"0","# # if the closest value is more than 30 min away, then we do not take it"
"0","# discrete$closest_datetime[abs(discrete$datetime - d$datetime[closest]) > 30*60] <- NA"
"0","discrete2merge <- discrete %>%"
"0","  #drop_na() %>%"
"0","  dplyr::select(closest_datetime, ct, qflag_ct) %>%"
"0","  rename(datetime=closest_datetime)"
"0","d_all <- full_join(d_all, discrete2merge, by=""datetime"")"
"0","# pH calculated"
"0","# closest <- which.closest(discrete$datetime, d_all$datetime) # closest date and time"
"0","# discrete$closest_datetime <- d_all$datetime[closest]"
"0","# # if the closest value is more than 30 min away, then we do not take it"
"0","# discrete$closest_datetime[abs(discrete$datetime - d_all$datetime[closest]) > 30*60] <- NA"
"0","discrete2merge <- discrete %>%"
"0","  #drop_na() %>%"
"0","  dplyr::select(closest_datetime, phcalc) %>%"
"0","  rename(datetime=closest_datetime)"
"0","d_all <- full_join(d_all, discrete2merge, by=""datetime"")"
"0","# seaFET pH "
"0","# closest <- which.closest(discrete$datetime, d_all$datetime) # closest date and time"
"0","# discrete$closest_datetime <- d_all$datetime[closest]"
"0","# # if the closest value is more than 30 min away, then we do not take it"
"0","# discrete$closest_datetime[abs(discrete$datetime - d_all$datetime[closest]) > 30*60] <- NA"
"0","discrete2merge <- discrete %>%"
"0","  #drop_na() %>%"
"0","  dplyr::select(closest_datetime, pH_s_seafet_temp_field) %>%"
"0","  rename(datetime=closest_datetime)"
"0","d_all <- full_join(d_all, discrete2merge, by=""datetime"")"
"0","# #voltINT"
"0","# discrete2merge <- discrete %>%"
"0","#   #drop_na() %>%"
"0","#   dplyr::select(closest_datetime, voltINT) %>%"
"0","#   rename(datetime=closest_datetime)"
"0","# d_all <- full_join(d_all, discrete2merge, by=""datetime"")"
"0","# #voltEXT"
"0","# discrete2merge <- discrete %>%"
"0","#   #drop_na() %>%"
"0","#   dplyr::select(closest_datetime, voltEXT) %>%"
"0","#   rename(datetime=closest_datetime)"
"0","# d_all <- full_join(d_all, discrete2merge, by=""datetime"")"
"0","# duraFET pH "
"0","# closest <- which.closest(discrete$datetime, d_all$datetime) # closest date and time"
"0","# discrete$closest_datetime <- d_all$datetime[closest]"
"0","# # if the closest value is more than 30 min away, then we do not take it"
"0","# discrete$closest_datetime[abs(discrete$datetime - d_all$datetime[closest]) > 30*60] <- NA"
"0","discrete2merge <- discrete %>%"
"0","  #drop_na() %>%"
"0","  dplyr::select(closest_datetime, pH_s_durafet_temp_field) %>%"
"0","  rename(datetime=closest_datetime)"
"0","d_all <- full_join(d_all, discrete2merge, by=""datetime"")"
"0","# pCO2"
"0","# closest <- which.closest(discrete$datetime, d_all$datetime) # closest date and time"
"0","# discrete$closest_datetime <- d_all$datetime[closest]"
"0","# # if the closest value is more than 30 min away, then we do not take it"
"0","# discrete$closest_datetime[abs(discrete$datetime - d_all$datetime[closest]) > 30*60] <- NA"
"0","discrete2merge <- discrete %>%"
"0","  #drop_na() %>%"
"0","  dplyr::select(closest_datetime, pco2calc) %>%"
"0","  rename(datetime=closest_datetime)"
"0","d_all <- full_join(d_all, discrete2merge, by=""datetime"")"
"0","save(file= paste0(path, ""fb_data/d_all.Rdata""), d_all)"
"0","## bind the voltages and deployment ##"
"0","# Duplicate datetime in closest_datetime to do the left_join"
"0","d_all$closest_datetime <- d_all$datetime"
"0","discrete <- left_join(discrete, d_all%>%dplyr::select(c(closest_datetime, voltEXT, voltINT)), by=""closest_datetime"")"
